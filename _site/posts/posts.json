[
  {
    "path": "posts/2018-02-15-the-winter-olympics-makeovermonday-2018-week7/",
    "title": "The Winter Olympics: MakeOverMonday 2018 Week7",
    "description": "Goal of this Visualization task is to create an alternative visualization\nto the Tableau's visualization for Winter Olympics data for different countries.",
    "author": [
      {
        "name": "Aditya Mangal",
        "url": "https://www.linkedin.com/in/adityamangal410/"
      }
    ],
    "date": "2018-02-15",
    "categories": [
      "MakeOverMonday"
    ],
    "contents": "\n\nContents\nIntroduction\nAnalysis\nCleaning up workspace and loading required libraries\nObtaining Data\nScrubbing data\nExploring Data\n\n\nIntroduction\nGoal of this Visualization task is to create an alternative visualization to the Tableau’s visualization for Winter Olympics data for different countries\nIn this blog post, I’m trying to generate a World Choropleth Map showing the total counts of medals for each country.\nAnalysis\nCleaning up workspace and loading required libraries\n\n\nShow code\n\nrm(list = ls())\n\n\n\n\n\nShow code\n\nlibrary(tidyverse) #Data Wrangling\nlibrary(httr)\nlibrary(readxl) #Data Ingestion\nlibrary(ggplot2) #Data Visualization\nlibrary(leaflet)\nlibrary(rgeos)\nlibrary(rgdal)\nlibrary(stringr)\n\n\n\nObtaining Data\nReading and viewing the dataset\n\n\nShow code\n\nGET(\"https://query.data.world/s/n5nc32oqhtb25hdt3vsa24rd4scs2w\", write_disk(tf <- tempfile(fileext = \".xlsx\")))\n\n\n\nShow code\n\nolympics = read_excel(tf)\n\n\n\n\n\nShow code\n\nolympics\n\n\n# A tibble: 2,865 x 9\n    Year Sport         Event        Country  Gender `Medal Rank` Medal\n   <dbl> <chr>         <chr>        <chr>    <chr>         <dbl> <chr>\n 1  1924 Bobsled       Men's Four/… Switzer… Men               1 gold \n 2  1924 Bobsled       Men's Four/… Britain  Men               2 silv…\n 3  1924 Bobsled       Men's Four/… Belgium  Men               3 bron…\n 4  1924 Cross-Countr… Men's 18 Ki… Norway   Men               1 gold \n 5  1924 Cross-Countr… Men's 18 Ki… Norway   Men               2 silv…\n 6  1924 Cross-Countr… Men's 18 Ki… Finland  Men               3 bron…\n 7  1924 Cross-Countr… Men's 50 Ki… Norway   Men               1 gold \n 8  1924 Cross-Countr… Men's 50 Ki… Norway   Men               2 silv…\n 9  1924 Cross-Countr… Men's 50 Ki… Norway   Men               3 bron…\n10  1924 Curling       Men's Curli… Britain  Men               1 gold \n# … with 2,855 more rows, and 2 more variables:\n#   Name of Athlete or Team <chr>, Age of Athlete <dbl>\n\nSummarizing and getting stats to better understand the dataset\n\n\nShow code\n\nolympics %>% \n  glimpse()\n\n\nRows: 2,865\nColumns: 9\n$ Year                      <dbl> 1924, 1924, 1924, 1924, 1924, 1924…\n$ Sport                     <chr> \"Bobsled\", \"Bobsled\", \"Bobsled\", \"…\n$ Event                     <chr> \"Men's Four/Five\", \"Men's Four/Fiv…\n$ Country                   <chr> \"Switzerland\", \"Britain\", \"Belgium…\n$ Gender                    <chr> \"Men\", \"Men\", \"Men\", \"Men\", \"Men\",…\n$ `Medal Rank`              <dbl> 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3…\n$ Medal                     <chr> \"gold\", \"silver\", \"bronze\", \"gold\"…\n$ `Name of Athlete or Team` <chr> \"Switzerland-1\", \"Britain-1\", \"Bel…\n$ `Age of Athlete`          <dbl> NA, NA, NA, 29, 24, 28, 29, 27, 24…\n\nShow code\n\nolympics %>% \n  summary()\n\n\n      Year         Sport              Event          \n Min.   :1924   Length:2865        Length:2865       \n 1st Qu.:1972   Class :character   Class :character  \n Median :1992   Mode  :character   Mode  :character  \n Mean   :1986                                        \n 3rd Qu.:2006                                        \n Max.   :2014                                        \n                                                     \n   Country             Gender            Medal Rank   \n Length:2865        Length:2865        Min.   :1.000  \n Class :character   Class :character   1st Qu.:1.000  \n Mode  :character   Mode  :character   Median :2.000  \n                                       Mean   :1.996  \n                                       3rd Qu.:3.000  \n                                       Max.   :3.000  \n                                                      \n    Medal           Name of Athlete or Team Age of Athlete \n Length:2865        Length:2865             Min.   :14.00  \n Class :character   Class :character        1st Qu.:22.00  \n Mode  :character   Mode  :character        Median :25.00  \n                                            Mean   :25.15  \n                                            3rd Qu.:28.00  \n                                            Max.   :42.00  \n                                            NA's   :692    \n\nScrubbing data\nAs per the dataset requirement, East and West Germany are to be grouped with Germany and Soviet Union and the 1992 Unified Team needs to be combined with Russia\n\n\nShow code\n\nolympics = olympics %>% \n  mutate(Country = recode(Country, \"Soviet Union\" = \"Russia\", \"Unified Team\" = \"Russia\",\n                          \"East Germany\" = \"Germany\", \"West Germany\" = \"Germany\"))\n\n\n\nReading in the ISO-3166 country codes dataset in order to generate the choropleth\n\n\nShow code\n\ncountryCodes = read_csv(\"https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv\")\n\n\n\n\n\nShow code\n\ncountryCodes\n\n\n# A tibble: 249 x 11\n   name        `alpha-2` `alpha-3` `country-code` `iso_3166-2`  region\n   <chr>       <chr>     <chr>     <chr>          <chr>         <chr> \n 1 Afghanistan AF        AFG       004            ISO 3166-2:AF Asia  \n 2 Åland Isla… AX        ALA       248            ISO 3166-2:AX Europe\n 3 Albania     AL        ALB       008            ISO 3166-2:AL Europe\n 4 Algeria     DZ        DZA       012            ISO 3166-2:DZ Africa\n 5 American S… AS        ASM       016            ISO 3166-2:AS Ocean…\n 6 Andorra     AD        AND       020            ISO 3166-2:AD Europe\n 7 Angola      AO        AGO       024            ISO 3166-2:AO Africa\n 8 Anguilla    AI        AIA       660            ISO 3166-2:AI Ameri…\n 9 Antarctica  AQ        ATA       010            ISO 3166-2:AQ <NA>  \n10 Antigua an… AG        ATG       028            ISO 3166-2:AG Ameri…\n# … with 239 more rows, and 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nJoining the 2 datasets and verifying if any country name mismatch happening in the 2.\n\n\nShow code\n\nolympics %>% \n  left_join(countryCodes, by=c(\"Country\" = \"name\")) %>% \n  filter(is.na(`alpha-3`)) %>% \n  select(Country) %>% \n  unique()\n\n\n# A tibble: 8 x 1\n  Country       \n  <chr>         \n1 Britain       \n2 United States \n3 Czechoslovakia\n4 Russia        \n5 North Korea   \n6 Yugoslavia    \n7 South Korea   \n8 Czech Republic\n\nLooks like above 7 countries do not have a corresponding entry in the countryCodes dataset. Lets try to find out the corresponding names for each of the 7 in the countryCodes dataset.\n\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"britain\")) #United Kingdom of Great Britain and Northern Ireland\n\n\n# A tibble: 1 x 11\n  name          `alpha-2` `alpha-3` `country-code` `iso_3166-2` region\n  <chr>         <chr>     <chr>     <chr>          <chr>        <chr> \n1 United Kingd… GB        GBR       826            ISO 3166-2:… Europe\n# … with 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"states\")) #United States of America\n\n\n# A tibble: 3 x 11\n  name          `alpha-2` `alpha-3` `country-code` `iso_3166-2` region\n  <chr>         <chr>     <chr>     <chr>          <chr>        <chr> \n1 Micronesia (… FM        FSM       583            ISO 3166-2:… Ocean…\n2 United State… US        USA       840            ISO 3166-2:… Ameri…\n3 United State… UM        UMI       581            ISO 3166-2:… Ocean…\n# … with 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"czech\")) #Czech Republic\n\n\n# A tibble: 1 x 11\n  name    `alpha-2` `alpha-3` `country-code` `iso_3166-2`  region\n  <chr>   <chr>     <chr>     <chr>          <chr>         <chr> \n1 Czechia CZ        CZE       203            ISO 3166-2:CZ Europe\n# … with 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"russia\")) #Russian Federation\n\n\n# A tibble: 1 x 11\n  name          `alpha-2` `alpha-3` `country-code` `iso_3166-2` region\n  <chr>         <chr>     <chr>     <chr>          <chr>        <chr> \n1 Russian Fede… RU        RUS       643            ISO 3166-2:… Europe\n# … with 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"korea\")) #Korea (Democratic People's Republic of) = North Korea, Korea (Republic of) = South Korea\n\n\n# A tibble: 2 x 11\n  name          `alpha-2` `alpha-3` `country-code` `iso_3166-2` region\n  <chr>         <chr>     <chr>     <chr>          <chr>        <chr> \n1 Korea (Democ… KP        PRK       408            ISO 3166-2:… Asia  \n2 Korea, Repub… KR        KOR       410            ISO 3166-2:… Asia  \n# … with 5 more variables: sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nShow code\n\ncountryCodes %>% \n  filter(str_detect(str_to_lower(name), \"yugo\")) #Macedonia (the former Yugoslav Republic of)\n\n\n# A tibble: 0 x 11\n# … with 11 variables: name <chr>, alpha-2 <chr>, alpha-3 <chr>,\n#   country-code <chr>, iso_3166-2 <chr>, region <chr>,\n#   sub-region <chr>, intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nRenaming mismatched countries in olympic dataset based on countryCodes dataset.\n\n\nShow code\n\nolympics = olympics %>% \n  mutate(Country = recode(Country,\n                          \"Britain\" = \"United Kingdom of Great Britain and Northern Ireland\",\n                          \"United States\" = \"United States of America\",\n                          \"Czechoslovakia\" = \"Czech Republic\",\n                          \"Russia\" = \"Russian Federation\",\n                          \"North Korea\" = \"Korea (Democratic People's Republic of)\",\n                          \"South Korea\" = \"Korea (Republic of)\",\n                          \"Yugoslavia\" = \"Macedonia (the former Yugoslav Republic of)\"))\n\n\n\nJoining and viewing the 2 datasets\n\n\nShow code\n\nolympics = olympics %>% \n  left_join(countryCodes, by=c(\"Country\" = \"name\"))\nolympics\n\n\n# A tibble: 2,865 x 19\n    Year Sport     Event    Country          Gender `Medal Rank` Medal\n   <dbl> <chr>     <chr>    <chr>            <chr>         <dbl> <chr>\n 1  1924 Bobsled   Men's F… Switzerland      Men               1 gold \n 2  1924 Bobsled   Men's F… United Kingdom … Men               2 silv…\n 3  1924 Bobsled   Men's F… Belgium          Men               3 bron…\n 4  1924 Cross-Co… Men's 1… Norway           Men               1 gold \n 5  1924 Cross-Co… Men's 1… Norway           Men               2 silv…\n 6  1924 Cross-Co… Men's 1… Finland          Men               3 bron…\n 7  1924 Cross-Co… Men's 5… Norway           Men               1 gold \n 8  1924 Cross-Co… Men's 5… Norway           Men               2 silv…\n 9  1924 Cross-Co… Men's 5… Norway           Men               3 bron…\n10  1924 Curling   Men's C… United Kingdom … Men               1 gold \n# … with 2,855 more rows, and 12 more variables:\n#   Name of Athlete or Team <chr>, Age of Athlete <dbl>,\n#   alpha-2 <chr>, alpha-3 <chr>, country-code <chr>,\n#   iso_3166-2 <chr>, region <chr>, sub-region <chr>,\n#   intermediate-region <chr>, region-code <chr>,\n#   sub-region-code <chr>, intermediate-region-code <chr>\n\nAggregating per country to find the total number of medals for each country and its corresponding alpha-3 code.\n\n\nShow code\n\nTotalMedalsPerCountry = olympics %>% \n  group_by(Country, `alpha-3`) %>% \n  summarise(TotalMedals = n()) %>% \n  rename(Code = `alpha-3`)\nTotalMedalsPerCountry\n\n\n# A tibble: 39 x 3\n# Groups:   Country [39]\n   Country        Code  TotalMedals\n   <chr>          <chr>       <int>\n 1 Australia      AUS            12\n 2 Austria        AUT           218\n 3 Belarus        BLR            15\n 4 Belgium        BEL             5\n 5 Bulgaria       BGR             6\n 6 Canada         CAN           170\n 7 China          CHN            53\n 8 Croatia        HRV            11\n 9 Czech Republic <NA>           49\n10 Denmark        DNK             1\n# … with 29 more rows\n\nLets see the top countries based on total number of medals\n\n\nShow code\n\nTotalMedalsPerCountry %>% \n  arrange(desc(TotalMedals))\n\n\n# A tibble: 39 x 3\n# Groups:   Country [39]\n   Country                  Code  TotalMedals\n   <chr>                    <chr>       <int>\n 1 Germany                  DEU           377\n 2 Russian Federation       RUS           341\n 3 Norway                   NOR           329\n 4 United States of America USA           282\n 5 Austria                  AUT           218\n 6 Canada                   CAN           170\n 7 Finland                  FIN           161\n 8 Sweden                   SWE           144\n 9 Switzerland              CHE           138\n10 Italy                    ITA           114\n# … with 29 more rows\n\nGermany obtained the most number of medals (377) closely followed by Russia with (341)\nExploring Data\nLets plot the above data on a map using leaflet.\nLoading shape file data set from World Borders Dataset.\n\n\nShow code\n\nshape = readOGR(\"the-winter-olympics-makeovermonday-2018-week7/TM_WORLD_BORDERS_SIMPL-0.3/TM_WORLD_BORDERS_SIMPL-0.3.shp\")\n\n\nOGR data source with driver: ESRI Shapefile \nSource: \"/Users/amangal/Documents/mygit/portfolio_distill/_posts/2018-02-15-the-winter-olympics-makeovermonday-2018-week7/the-winter-olympics-makeovermonday-2018-week7/TM_WORLD_BORDERS_SIMPL-0.3/TM_WORLD_BORDERS_SIMPL-0.3.shp\", layer: \"TM_WORLD_BORDERS_SIMPL-0.3\"\nwith 246 features\nIt has 11 fields\nInteger64 fields read as strings:  POP2005 \n\nShow code\n\nnames(shape)\n\n\n [1] \"FIPS\"      \"ISO2\"      \"ISO3\"      \"UN\"        \"NAME\"     \n [6] \"AREA\"      \"POP2005\"   \"REGION\"    \"SUBREGION\" \"LON\"      \n[11] \"LAT\"      \n\n\n\nShow code\n\nTotalMedalsPerCountry = TotalMedalsPerCountry %>% \n  left_join(tbl_df(shape@data), by = c(\"Code\"=\"ISO3\")) %>% \n  na.omit()\n\nTotalMedalsPerCountry = TotalMedalsPerCountry %>% \n  mutate(label = str_c(sep = \" - \", NAME, \"TotalMedals\", TotalMedals))\n\n\n\n\n\nShow code\n\nbins = c(0, 10, 20, 30, 50, 100, 150, 200, 300, Inf)\npal = colorBin(\"RdYlGn\", domain = TotalMedalsPerCountry$TotalMedals, bins = bins)\n\nTotalMedalsPerCountry %>% \n  leaflet() %>% \n  addTiles() %>% \n  setView(53.019815, 1.369002, zoom = 1) %>% \n  addCircles(~LON, ~LAT, label = ~label, color = ~pal(TotalMedals), weight = 10)\n\n\n\n{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addCircles\",\"args\":[[-24.973,47.683,53.54,50.643,42.761,59.081,33.42,45.723,56.058,58.674,64.504,46.565,51.11,47.07,42.7,36.491,48.16,39.778,56.858,47.153,49.771,52.077,-42.634,61.152,52.125,45.844,61.988,48.707,46.124,40.227,62.011,46.861,49.016,53,39.622,41.75],[136.189,14.912,28.047,4.664,25.231,-109.433,106.514,16.693,9.264,25.793,26.272,2.55,9.851,19.134,12.8,139.068,67.301,126.451,25.641,9.555,6.088,5.389,172.235,8.74,19.401,24.969,96.689,19.491,14.827,-3.649,15.27,7.908,31.388,-1.6,-98.606,63.17],10,null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":[\"#F46D43\",\"#66BD63\",\"#F46D43\",\"#D73027\",\"#D73027\",\"#A6D96A\",\"#FFFFBF\",\"#F46D43\",\"#D73027\",\"#D73027\",\"#A6D96A\",\"#D9EF8B\",\"#1A9850\",\"#D73027\",\"#D9EF8B\",\"#FEE08B\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D9EF8B\",\"#D73027\",\"#1A9850\",\"#FDAE61\",\"#D73027\",\"#1A9850\",\"#D73027\",\"#F46D43\",\"#D73027\",\"#D9EF8B\",\"#D9EF8B\",\"#D73027\",\"#FDAE61\",\"#66BD63\",\"#D73027\"],\"weight\":10,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#F46D43\",\"#66BD63\",\"#F46D43\",\"#D73027\",\"#D73027\",\"#A6D96A\",\"#FFFFBF\",\"#F46D43\",\"#D73027\",\"#D73027\",\"#A6D96A\",\"#D9EF8B\",\"#1A9850\",\"#D73027\",\"#D9EF8B\",\"#FEE08B\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D73027\",\"#D9EF8B\",\"#D73027\",\"#1A9850\",\"#FDAE61\",\"#D73027\",\"#1A9850\",\"#D73027\",\"#F46D43\",\"#D73027\",\"#D9EF8B\",\"#D9EF8B\",\"#D73027\",\"#FDAE61\",\"#66BD63\",\"#D73027\"],\"fillOpacity\":0.2},null,null,[\"Australia - TotalMedals - 12\",\"Austria - TotalMedals - 218\",\"Belarus - TotalMedals - 15\",\"Belgium - TotalMedals - 5\",\"Bulgaria - TotalMedals - 6\",\"Canada - TotalMedals - 170\",\"China - TotalMedals - 53\",\"Croatia - TotalMedals - 11\",\"Denmark - TotalMedals - 1\",\"Estonia - TotalMedals - 7\",\"Finland - TotalMedals - 161\",\"France - TotalMedals - 109\",\"Germany - TotalMedals - 377\",\"Hungary - TotalMedals - 6\",\"Italy - TotalMedals - 114\",\"Japan - TotalMedals - 45\",\"Kazakhstan - TotalMedals - 7\",\"Korea, Democratic People's Republic of - TotalMedals - 2\",\"Latvia - TotalMedals - 7\",\"Liechtenstein - TotalMedals - 9\",\"Luxembourg - TotalMedals - 2\",\"Netherlands - TotalMedals - 110\",\"New Zealand - TotalMedals - 1\",\"Norway - TotalMedals - 329\",\"Poland - TotalMedals - 20\",\"Romania - TotalMedals - 1\",\"Russia - TotalMedals - 341\",\"Slovakia - TotalMedals - 5\",\"Slovenia - TotalMedals - 15\",\"Spain - TotalMedals - 2\",\"Sweden - TotalMedals - 144\",\"Switzerland - TotalMedals - 138\",\"Ukraine - TotalMedals - 7\",\"United Kingdom - TotalMedals - 26\",\"United States - TotalMedals - 282\",\"Uzbekistan - TotalMedals - 1\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null,null]}],\"setView\":[[1.369002,53.019815],1,[]],\"limits\":{\"lat\":[-42.634,64.504],\"lng\":[-109.433,172.235]}},\"evals\":[],\"jsHooks\":[]}\nAs can be clearly seen above, Norway and USA closely followed in the total medals ranking. Visualizing data on a map can provide a clear view of the overall data.\n\n\n\n",
    "preview": "https://lh3.googleusercontent.com/rH18DMGKl5FY_Oh9o6WIoCTt7bDkkwghTNZGDjX6WhqkiUkm8ZWDg5ZvbkQLmNVjPZwZ2ksaKnjAYR2bPiWkLkdhLTN5dLsKfoHNr4Qf6HhDGhVey6eb2hCCiipxs_IUyBewU4QudW7mtj8iNIiYWzp0L_My0ZfgFBAnV1dU5vKVVMm8JEZDzncNX_xuijhjc54OHlvJT7TOZ8Qkh-aG95OPVCWG2vCYN2HaSCC8jUXJ9iYvYam3GmFQ8fQs7kKRLCpRkQgNAvb0STu-5J1KVC3EIrrSIZEkwGCzlQb5E4ZbT2d3mEw8Mo921nq9CG6TvvFMQpKHdXbszn9tBFv25CjnPLwLJ_G1DNc_CbCcbNslhcJSnAvbJKGUPSTu8JHTBpx1NY25I-p5UcA-3pXl50vM4f2Jggcih-Urtr2DXOjpMqWIlwEHcETQ6VbUAQY4aIE71O-WWkJhxekBvIbc28dLE8NP7o7QwnPho6SVdwNuy7milDhI8mL_6FlQ0lDFrEHGdnK03vayfMsv3PWRrsondkCsyHYpW1a5ER9_3MdHTIn57ZdkpNY0eXYICp-3sg_-BSlZSYnWzVdJys7LXMcu4P5zAJXkKQzgEg17Byr_6gyJYDYbb4S1lnoZB4xAKkDxwV_-CWBCc3M6NV1i8MwWEJeS_GCR=w750-h420-no",
    "last_modified": "2021-04-18T14:37:29-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2017-09-28-india-transportation-accidents-exploration-project/",
    "title": "India Transportation Accidents Exploration Project",
    "description": "With this project I will try to visualize and understand the traffic accident data for India as publicly accessible  [here](https://data.gov.in/)",
    "author": [
      {
        "name": "Aditya Mangal",
        "url": "https://www.linkedin.com/in/adityamangal410/"
      }
    ],
    "date": "2017-09-28",
    "categories": [
      "Projects"
    ],
    "contents": "\nProject Goals\nVisualize traffic information and find trends\nFind outliers and see if any valuable info can be dugout for each state or overall.\nTry to predict number of accidents or other useful information.\nI’ll put out notebooks related to the work as separate articles.\n\n\n\n",
    "preview": "https://lh3.googleusercontent.com/fruMUvRzmWjXTG00Bk3TNfbHfTBDEgWQcK2L9Feb7tQM0FCzSk8o-DybzHccDP0PrBljq2y9X-GZuRTQXrat5_D_y3S1amU22CXBo-UPzr7RPGLkRl_53xksS_dtB3A-TCbqHTwOrOufikQznE7-7X8AtMrM53cHCJnR99ob7h8v_CEEQLOdje2DCBwblUtr4Mofna7vFWo7x7vRapU5pcyigJI6Qahne2vYAQiCjXP1lr8vJUN2a4C9mbr9xqDzH2UaNsZwuqsr53lhusfa-e8EhD0gTMZdL0FACu2McPJNDnJEeBG4dMbdB5IscN6w6Z6577nnSu0nTk0AibdUuI429JGQB2nPFZqLfk5uNKOGd4txq6ZJZifE11L9qyoXIw7WGGPC37qkQPYA5hKuGSfUZGG-VixKWX0AU0FI219exef5i5eo4yDyTn2dLiDJprA6MwEm_31a4aA_pbIgGR1O6HML3xCaManQAOv-7N0m1t2X3IwfSj7yq2hSydvQIoiCg7tb5ifPgVSrgWAvN64Jwp2AADJU_a16fIyO5HXv2XFURXEpsKj4sr9zzFDLMdY3wE6yip0vnH09xumEYNyvOEp2zkC2jPYGP5MPCgYSOpwnFLpLPxy49RFKbXMTHtS8XKFiuxH6b_gpPqPUOLwgASVOm_aH=w750-h498-no",
    "last_modified": "2021-04-18T14:38:29-07:00",
    "input_file": {}
  }
]
